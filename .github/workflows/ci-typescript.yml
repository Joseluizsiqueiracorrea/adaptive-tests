name: TypeScript CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'languages/typescript/**'
      - '.github/workflows/ci-typescript.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'languages/typescript/**'
      - '.github/workflows/ci-typescript.yml'

permissions:
  contents: read

jobs:
  typescript-tests:
    name: TypeScript Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20, 22]
        typescript-version: ['4.9', '5.0', '5.1', '5.2', '5.3', '5.4']

    defaults:
      run:
        working-directory: languages/typescript

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: languages/typescript/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Install TypeScript ${{ matrix.typescript-version }}
        run: npm install typescript@${{ matrix.typescript-version }} --no-save

      - name: Run type checking
        run: npx tsc --noEmit

      - name: Run tests
        run: npm test

      - name: Run TypeScript-specific tests
        run: npm run test:typescript || npm run test:ts || true

      - name: Test interface discovery
        run: |
          echo "üîç Testing TypeScript interface discovery..."
          node -e "
            const { discoverInterface } = require('./src/discovery');
            console.log('‚úÖ TypeScript discovery loaded successfully');
          " || true

      - name: Build project
        run: npm run build || npm run compile

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./languages/typescript/coverage/lcov.info
          flags: typescript
          name: typescript-coverage

  typescript-framework-tests:
    name: TypeScript Framework Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        framework: ['jest', 'vitest', 'mocha']

    defaults:
      run:
        working-directory: languages/typescript

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: languages/typescript/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run ${{ matrix.framework }} tests
        run: |
          if [ "${{ matrix.framework }}" = "jest" ]; then
            npm run test:jest || npm test
          elif [ "${{ matrix.framework }}" = "vitest" ]; then
            npm run test:vitest || true
          elif [ "${{ matrix.framework }}" = "mocha" ]; then
            npm run test:mocha || true
          fi

  typescript-examples:
    name: TypeScript Examples
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: languages/typescript

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: languages/typescript/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run example tests
        run: |
          cd examples
          npm test || true

      - name: Test React TypeScript integration
        run: |
          cd examples
          if [ -d react-typescript ]; then
            cd react-typescript
            npm test || true
          fi

      - name: Test generic type discovery
        run: |
          echo "üîç Testing generic type discovery..."
          npm run test:generics || true

  typescript-compatibility:
    name: TypeScript Compatibility
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18, 20]

    defaults:
      run:
        working-directory: languages/typescript

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: languages/typescript/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run type checking
        run: npx tsc --noEmit

      - name: Run basic tests
        run: npm test

  typescript-linting:
    name: TypeScript Linting
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: languages/typescript

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: languages/typescript/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint || npx eslint src/ tests/ || true

      - name: Run Prettier check
        run: npm run prettier:check || npx prettier --check src/ tests/ || true

      - name: Run TypeScript strict checks
        run: |
          echo "üîß Running strict TypeScript checks..."
          npx tsc --strict --noEmit || true