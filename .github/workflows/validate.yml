name: Validation
permissions:
  contents: read

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run validation suite
      run: npm run validate

    - name: Verify adaptive tests survive refactoring
      run: |
        npm run restore
        npm run test:adaptive
        npm run refactor
        npm run test:adaptive

    - name: Verify adaptive tests catch real bugs
      run: |
        npm run restore
        npm run demo:broken
        npm run test:adaptive || echo "âœ… Correctly failed on broken implementation"
        npm run restore:broken

  coverage:
    runs-on: ubuntu-latest
    needs: validate

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js 20.x
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests with coverage
      run: npm run test:coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false