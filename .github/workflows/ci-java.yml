name: Java CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'languages/java/**'
      - '.github/workflows/ci-java.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'languages/java/**'
      - '.github/workflows/ci-java.yml'

permissions:
  contents: read

jobs:
  java-tests:
    name: Java Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [11, 17, 21]

    defaults:
      run:
        working-directory: languages/java

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Run Maven tests
        run: |
          if [ -f pom.xml ]; then
            echo "üì¶ Running Maven tests..."
            mvn clean test -B
            mvn verify -B
          else
            echo "‚ÑπÔ∏è No pom.xml found, skipping Maven tests"
          fi

      - name: Run Maven integration tests
        run: |
          if [ -f pom.xml ]; then
            echo "üîß Running Maven integration tests..."
            mvn clean integration-test -B || true
          fi

      - name: Run examples tests
        run: |
          cd examples
          if [ -f pom.xml ]; then
            echo "üìã Running example tests..."
            mvn clean test -B
          fi

      - name: Generate test reports
        run: |
          if [ -f pom.xml ]; then
            mvn surefire-report:report -B || true
          fi

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./languages/java/target/site/jacoco/jacoco.xml
          flags: java
          name: java-coverage

  java-gradle:
    name: Java Gradle Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [11, 17, 21]

    defaults:
      run:
        working-directory: languages/java

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Run Gradle tests
        run: |
          if [ -f build.gradle ] || [ -f build.gradle.kts ]; then
            echo "üì¶ Running Gradle tests..."
            ./gradlew test --stacktrace
            ./gradlew check --stacktrace
          else
            echo "‚ÑπÔ∏è No Gradle build file found, skipping Gradle tests"
          fi

      - name: Run Gradle integration tests
        run: |
          if [ -f build.gradle ] || [ -f build.gradle.kts ]; then
            echo "üîß Running Gradle integration tests..."
            ./gradlew integrationTest --stacktrace || true
          fi

  java-spring-boot:
    name: Java Spring Boot Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: languages/java

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run Spring Boot tests
        run: |
          cd examples/spring-boot
          if [ -f pom.xml ]; then
            echo "üçÉ Running Spring Boot tests..."
            mvn clean test -B
            mvn spring-boot:run -Dspring-boot.run.fork=false &
            SPRING_PID=$!
            sleep 10
            kill $SPRING_PID || true
          fi

  java-code-quality:
    name: Java Code Quality
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: languages/java

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run Checkstyle
        run: |
          if [ -f pom.xml ]; then
            echo "üìè Running Checkstyle..."
            mvn checkstyle:check -B || true
          fi

      - name: Run SpotBugs
        run: |
          if [ -f pom.xml ]; then
            echo "üêõ Running SpotBugs..."
            mvn spotbugs:check -B || true
          fi

      - name: Run PMD
        run: |
          if [ -f pom.xml ]; then
            echo "üìä Running PMD..."
            mvn pmd:check -B || true
          fi

  java-security:
    name: Java Security
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: languages/java

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run OWASP Dependency Check
        run: |
          if [ -f pom.xml ]; then
            echo "üîí Running OWASP Dependency Check..."
            mvn org.owasp:dependency-check-maven:check -B || true
          fi

      - name: Check for vulnerable dependencies
        run: |
          if [ -f pom.xml ]; then
            echo "üîç Checking for known vulnerabilities..."
            mvn versions:display-dependency-updates -B || true
          fi

  java-compatibility:
    name: Java Compatibility
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        java-version: [11, 21]

    defaults:
      run:
        working-directory: languages/java

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Run basic tests
        run: |
          if [ -f pom.xml ]; then
            mvn clean test -B --batch-mode --fail-at-end
          fi