name: Tools CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'tools/**'
      - '.github/workflows/ci-tools.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'tools/**'
      - '.github/workflows/ci-tools.yml'

permissions:
  contents: read

jobs:
  vscode-extension:
    name: VS Code Extension
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]

    defaults:
      run:
        working-directory: tools/vscode-adaptive-tests

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: tools/vscode-adaptive-tests/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: |
          npm run lint || npx eslint src/ tests/ || true

      - name: Run tests
        run: npm test

      - name: Build extension
        run: |
          npm run compile || npm run build

      - name: Package extension
        run: |
          npm install -g vsce
          vsce package --no-dependencies || true

      - name: Test extension activation
        run: |
          echo "üîå Testing extension activation..."
          npm run test:activation || true

  vscode-compatibility:
    name: VS Code Compatibility
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    defaults:
      run:
        working-directory: tools/vscode-adaptive-tests

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: tools/vscode-adaptive-tests/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build extension
        run: npm run compile || npm run build

      - name: Test basic functionality
        run: |
          echo "üß™ Testing basic extension functionality..."
          node -e "console.log('Extension builds successfully on ${{ matrix.os }}')"

  extension-integration:
    name: Extension Integration Tests
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: tools/vscode-adaptive-tests

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: tools/vscode-adaptive-tests/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Download VS Code
        run: |
          npm run test:download-vscode || true

      - name: Run integration tests
        run: |
          echo "üîß Running VS Code integration tests..."
          npm run test:integration || true

      - name: Test discovery functionality
        run: |
          echo "üîç Testing discovery integration..."
          npm run test:discovery || true

  tools-quality:
    name: Tools Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install global tools
        run: |
          npm install -g eslint prettier typescript

      - name: Check VS Code extension quality
        run: |
          cd tools/vscode-adaptive-tests
          if [ -f package.json ]; then
            npm ci
            npm run lint || eslint src/ tests/ || true
            npm run prettier:check || prettier --check src/ tests/ || true
          fi

      - name: Type checking
        run: |
          cd tools/vscode-adaptive-tests
          if [ -f tsconfig.json ]; then
            npx tsc --noEmit || true
          fi

  tools-security:
    name: Tools Security
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Check VS Code extension security
        run: |
          cd tools/vscode-adaptive-tests
          if [ -f package.json ]; then
            npm ci
            echo "üîí Running npm audit..."
            npm audit --audit-level=moderate || true
            echo "üì¶ Checking for outdated packages..."
            npm outdated || true
          fi

  tools-summary:
    name: Tools Summary
    runs-on: ubuntu-latest
    needs: [vscode-extension, vscode-compatibility, extension-integration, tools-quality, tools-security]
    if: always()

    steps:
      - name: Summary
        run: |
          echo "üîß Tools CI Summary:"
          echo "VS Code Extension: ${{ needs.vscode-extension.result }}"
          echo "VS Code Compatibility: ${{ needs.vscode-compatibility.result }}"
          echo "Extension Integration: ${{ needs.extension-integration.result }}"
          echo "Tools Quality: ${{ needs.tools-quality.result }}"
          echo "Tools Security: ${{ needs.tools-security.result }}"

          if [ "${{ needs.vscode-extension.result }}" != "success" ]; then
            echo "‚ö†Ô∏è VS Code extension tests failed"
          else
            echo "‚úÖ VS Code extension tests passed"
          fi